{
  "toolset": {
    "name": "Aider Code Editor **EXPERIMENTAL**",
    "description": "Provides tools for interacting with the Aider code editor."
  },
  "config": {
    "header": "\n--- Configure File Editor (Aider) Settings ({context}) ---",
    "instructions": "Select the models and edit format the File Editor should use.\n{save_location_info}\nLeave input empty at any step to keep the current setting.\nEnter 'none' to reset a setting to its default value.",
    "save_location_global": "This configuration will be saved as the global default for new chats.",
    "save_location_chat": "This configuration will be saved for the current chat AND as the global default for new chats.",
    "model_header": "\n--- Select File Editor '{role}' Model ---",
    "model_available_title": "Available models:",
    "model_current_marker": " <- Current Setting",
    "model_aliases_suffix": "  (aliases: {alias_str})",
    "model_prompt": "Enter model name for '{role}' (leave empty to keep '{current_setting}', enter 'none' to reset to default)",
    "model_info_keep": "Keeping current setting: {setting}",
    "model_info_reset": "Resetting {role} model to default ('{default_name}')",
    "model_error_unknown": "Unknown model '{selected}'. Please choose from the list or enter 'none'",
    "model_warn_cancel": "Selection cancelled. Keeping current setting.",
    "format_header": "\n--- Select File Editor Edit Format ---",
    "format_option_default": "  0: {default_display} {marker}",
    "format_option": "  {idx}: {format}{marker} - {description}",
    "format_default_name": "Aider Default (model-specific)",
    "format_prompt": "Enter choice (0-{max_idx}), leave empty to keep current: ",
    "format_info_keep": "Keeping current setting: {setting}",
    "format_info_selected": "Selected format: {setting}",
    "format_error_invalid": "Invalid choice. Please try again.",
    "format_warn_cancel": "Selection cancelled. Keeping current setting: {setting}",
    "api_key_check_header": "\nChecking API keys for selected File Editor models...",
    "api_key_error_check": "\nError checking API key for model '{model_name}'. Check logs.",
    "save_success_global": "\nGlobal default File Editor configuration updated.",
    "save_success_chat": "\nFile Editor configuration updated for this chat and globally.",
    "save_warn_missing_keys": "Note: Some API keys missing/skipped. Ensure they are set in .env.",
    "save_error_failed": "\nFile Editor configuration update failed. Check logs."
  },
  "schemas": {
    "no_args": {},
    "file_path": {
      "path_desc": "The absolute or relative path to the file."
    },
    "instruction": {
      "instruction_desc": "The natural language instruction for the edit request."
    },
    "user_response": {
      "response_desc": "Your response to the editor's prompt."
    }
  },
  "tools": {
    "usage_guide": {
      "name": "aider_usage_guide",
      "description": "Displays usage instructions and context for the Aider Code Copilot toolset."
    },
    "add_file": {
      "name": "add_file_to_copilot_context",
      "description": "Adds a file to the Code Copilot context, files in context can be used to understand the codebase and perform edits. Files to be added can be specified by absolute or relative paths. The file must exist in the filesystem.",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: File Editor not initialized or failed to restore state. Use start_file_editor first.",
        "not_exists": "Error: File '{path}' (resolved to '{abs_path}') does not exist.",
        "outside_root": "Error: Cannot add file '{path}' outside project root '{root}'.",
        "different_drive": "Error: Cannot add file '{path}' on a different drive than project root '{root}'.",
        "generic": "Error adding file {path}: {error}. {output}"
      },
      "warn_confirm_failed": "Warning: Failed to confirm {path} was added successfully.",
      "success": "Successfully added {path}. {output}"
    },
    "remove_file": {
      "name": "remove_file_from_copilot_context",
      "description": "Removes a file from the Code Copilot context. Files to be removed can be specified by absolute or relative paths. The file must have been added to the context previously.",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: File Editor not initialized or failed to restore state. Use start_file_editor first.",
        "generic": "Error dropping file {path}: {error}. {output}"
      },
      "info_not_found": "File {path} not found in context. {output}",
      "success": "Successfully dropped {path}. {output}"
    },
    "list_files": {
      "name": "list_files_in_copilot_context",
      "description": "Lists all files in the Code Copilot context. This is useful to see what files are currently being edited or added for context.",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: Editor not initialized. Use start_file_editor first.",
        "generic": "Error listing files: {error}"
      },
      "info_empty": "No files are currently added to the editing session.",
      "success": "Files in editor:\n{file_list}"
    },
    "request_edit": {
      "name": "request_copilot_edit",
      "description": "Explain to the copilot what needs to be done. The editor will complete the request based on own knowledge and submitted files. Use clear instructions using natural language, you can include specific code snippets.",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: File Editor not initialized or failed to restore state. Use start_file_editor first.",
        "no_files": "Error: No files have been added to the editing session. Use include_file first.",
        "in_progress": "Error: An edit is already in progress for this session.",
        "timeout": "Error: Timed out waiting for Aider response.",
        "queue_exception": "Error: Exception while waiting for Aider: {error}",
        "edit_failed": "Error during edit:\n{content}",
        "unknown_response": "Error: Unknown response type '{type}' from Aider process."
      },
      "prompt_needed": "{signal} {guidance}",
      "prompt_guidance": "Aider requires input. Please respond using 'submit_editor_input'. Prompt: '{prompt}'",
      "prompt_subject": " (Regarding: {subject})",
      "prompt_default": " [Default: {default}]",
      "prompt_confirm_options": " Options: {options}",
      "success": "Edit completed. {output}"
    },
    "view_diffs": {
      "name": "view_code_copilot_edit_diffs",
      "description": "Shows the git diff of changes made by the Code Copilot based on 'request_edit' tool in the current session. This is useful to see what changes have been made to the files. Works only if there was a git repository initialized in the project root.",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: File Editor not initialized or failed to restore state. Use start_file_editor first.",
        "no_repo": "Error: Git repository not available. Cannot show diff.",
        "git_error": "Error viewing diff: {error}. {output}",
        "generic": "Error viewing diff: {error}. {output}"
      },
      "info_no_changes": "No changes detected in tracked files.",
      "success": "Diff:\n{diff}"
    },
    "undo_edit": {
      "name": "undo_last_code_copilot_edit",
      "description": "Undoes the last edit commit made by the Code Copilot. This is useful to revert changes made to the files, might not work if the commit was made outside of the File Editor or if there is no git repository initialized.",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: File Editor not initialized or failed to restore state. Use start_file_editor first.",
        "no_repo": "Error: Cannot undo. Git repository not found or not configured.",
        "cmd_module_missing": "Error: Commands module not available in Aider.",
        "git_error": "Error during undo: {error}. {output}",
        "generic": "Error during undo: {error}. {output}"
      },
      "success": "Undo attempt finished. {output}"
    },
    "close_editor": {
      "name": "close_code_copilot",
      "description": "Closes the file editing session with AI Code Copilot. Changes are saved automatically. Close it after you verified with the user they don't want to edit the files anymore.",
      "error": {
        "no_chat": "Error: No active chat session found to close the editor for."
      },
      "info_success": "File Editor session context cleared.",
      "warn_error": "File Editor session context possibly cleared (encountered error)."
    },
    "submit_input": {
      "name": "respond_to_code_copilot_input_request",
      "description": "Use to provide respond to Code Copilot only when requested (marked by '[CODE_COPILOT_INPUT_REQUEST]').",
      "prompt_suffix": "(edit or confirm response) > ",
      "error": {
        "no_chat": "Error: No active chat session found.",
        "init_failed": "Error: No active editor session found or state could not be restored.",
        "empty_response": "Error: Received empty response for submission.",
        "empty_confirmed": "Error: Confirmed response is empty.",
        "not_waiting": "Error: The editing process is not waiting for input.",
        "timeout": "Error: Timed out waiting for Aider response after submitting input.",
        "queue_exception": "Error: Exception while waiting for Aider after submitting input: {error}",
        "edit_failed": "Error during edit:\n{content}",
        "unknown_response": "Error: Unknown response type '{type}'."
      },
      "prompt_needed": "{signal} {guidance}",
      "prompt_guidance": "Aider requires further input. Respond using 'submit_editor_input'. Prompt: '{prompt}'",
      "prompt_subject": " (Re: {subject})",
      "prompt_hitl_suffix": "({prompt}) > ",
      "success": "Edit completed. {output}"
    }
  },
  "integration": {
    "run_error": "Error during edit: {error}\nOutput before error:\n{output}"
  }
}